Assignment 3 readme File

------------------------------------------------------------------------
What is your name?
Jasin Cekinmez



------------------------------------------------------------------------
What authorized sources of information did you use to complete the
assignment? COPY THE LIST of authorized sources of information given
in the "Policies" web page (also available on armlab in the file
~cos217/AuthorizedSourcesList ) to this section of the readme file,
and edit it as appropriate.

COS 217 lecture materials. 
COS 217 precept materials.
COS 217 website.

------------------------------------------------------------------------
What unauthorized sources of information did you use to complete the
assignment? List any unauthorized sources of information that you used
to complete the assignment, and describe how you used them. The course
"Policies" web page defines unauthorized sources of information, and
any source that you have used but not listed in the authorized sources
should be included here. Please note that using an unauthorized source
may trigger a course penalty, and depending on the nature of the
interaction, may additionally require the interaction being reported
to the Committee on Discipline. Write "None" if you used no
unauthorized sources of information.

None


------------------------------------------------------------------------
In fulfillment of the requirement from section 2.4.3 of the Academic
Regulations in Princeton's Rights, Rules, Responsibilities guide,
enter your name in the space below the following affirmation:

This paper represents my own work in accordance with University
regulations.

Jasin Cekinmez 



------------------------------------------------------------------------
In fulfillment of the requirement from section 2.4.6 of the Academic
Regulations in Princeton's Rights, Rules, Responsibilities guide,
and the COS 217 Generative AI policy, disclose and describe how you
used AI in completing this assignment:

Didn't use

------------------------------------------------------------------------
What is your assessment of the assignment? Was it helpful? Was it fun?

I would say this assignment was pretty good it really sharpened my skills
dynamic memory management. Definitely helpful and fun!



------------------------------------------------------------------------
(optional) What information can you provide about your submission that
will help your grader to grade it in the most favorable light? In
particular, what bugs are in your submission?



------------------------------------------------------------------------
What warnings does splint generate on symtablelist.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."
NONE.



------------------------------------------------------------------------
What warnings does critTer generate on symtablelist.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."
  symtablelist.c: line 97: medium priority:
   Do you want to validate 'pcKey' through an assert?

   symtablelist.c: line 97: medium priority:
   Do you want to validate 'pvValue' through an assert?

   symtablelist.c: line 128: medium priority:
   Do you want to validate 'pcKey' through an assert?

   symtablelist.c: line 128: medium priority:
   Do you want to validate 'pvValue' through an assert?

   symtablelist.c: line 149: medium priority:
   Do you want to validate 'pcKey' through an assert?

   symtablelist.c: line 169: medium priority:
   Do you want to validate 'pcKey' through an assert?

   symtablelist.c: line 219: medium priority:
   Do you want to validate 'pvExtra' through an assert?
I disagree with these since key and value can be NULL, so can Extra 
since it's optional


------------------------------------------------------------------------
What warnings does splint generate on symtablehash.c, and what are your
disagreements with them? Copy the splint warnings here, and express your
disagreement after each warning. If there are no warnings, then write
"None."
None


------------------------------------------------------------------------
What warnings does critTer generate on symtablehash.c, and what are your
disagreements with them? Copy the critTer warnings here, and express
your disagreement after each warning. If there are no warnings, then
write "None."

   symtablehash.c: line 111: medium priority:
   Do you want to validate 'pcKey' through an assert?

   symtablehash.c: line 173: medium priority:
   Do you want to validate 'pcKey' through an assert?

   symtablehash.c: line 173: medium priority:
   Do you want to validate 'pvValue' through an assert?

   symtablehash.c: line 210: medium priority:
   Do you want to validate 'pcKey' through an assert?

   symtablehash.c: line 210: medium priority:
   Do you want to validate 'pvValue' through an assert?

   symtablehash.c: line 233: medium priority:
   Do you want to validate 'pcKey' through an assert?

   symtablehash.c: line 255: medium priority:
   Do you want to validate 'pcKey' through an assert?

   symtablehash.c: line 308: medium priority:
   Do you want to validate 'pvExtra' through an assert?

   symtablehash.c: line 181: high priority: 
   Use of magic number (65521), which should be given a meaningful name
I disagree with the asserts as explained above, plus I already define 



------------------------------------------------------------------------
What are the CPU times reported by testsymtable.c with binding counts
50, 500, 5000, 50000, and 500000 using (1) your linked list
implementation, (2) your non-expanding hash table implementation, and
(3) your expanding hash table implementation? Fill in the blanks.

The linked list implementation with:
-- 50 bindings consumed 0 seconds.
-- 500 bindings consumed 0 seconds.
-- 5000 bindings consumed 0.159962 seconds.
-- 50000 bindings consumed 21.618241 seconds.
-- 500000 bindings consumed More than 5 minutes.

The non-expanding hash table implementation with:
-- 50 bindings consumed 0 seconds.
-- 500 bindings consumed 0 seconds.
-- 5000 bindings consumed 0 seconds.
-- 50000 bindings consumed 0.150698 seconds.
-- 500000 bindings consumed 27.268246 seconds.

The expanding hash table implementation with:
-- 50 bindings consumed 0 seconds.
-- 500 bindings consumed 0 seconds.
-- 5000 bindings consumed 0 seconds.
-- 50000 bindings consumed 0.028258 seconds.
-- 500000 bindings consumed 0.423473 seconds.
